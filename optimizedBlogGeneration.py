from markdownify import markdownify
import requests
from pollinationai import PollinationAI, PollinationAIAssistant
from googlesearch import search
import json
from utils import getGroupedUrls, groupUrls, getPromotionalUrls, getRelevantPromotionalUrls, getRelatedKeywords, getCompanyProfile

client = PollinationAI()


def getBlogStructureFromBlogURL(url):
    if(not url): return
    try:
        response = requests.get(url)
    except:
        return
    if response.status_code != 200:
        return
    markdown = markdownify(response.content)

    assistant = PollinationAIAssistant(
        messages=[
            {
                "role": "user",
                "content": '\n\n\n\n\n\n\n\n10 Heart-Melting Gifts to Sweep Your Valentine Off Their Feet\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n* [Festivals](https://www.igp.com/blog/category/festivals/)\n  + [Rakhi](https://www.igp.com/blog/category/rakhi/)\n  + [Karwa Chauth](https://www.igp.com/blog/category/karwa-chauth/)\n  + [Diwali](https://www.igp.com/blog/category/festivals/diwali/)\n  + [Christmas](https://www.igp.com/blog/category/christmas/)\n  + [New Year](https://www.igp.com/blog/category/festivals/new-year/)\n  + [Valentines Day](https://www.igp.com/blog/category/valentines-day/)\n  + [Holi](https://www.igp.com/blog/category/holi/)\n  + [Women’s Day](https://www.igp.com/blog/category/womens-day/)\n  + [Fathers Day](https://www.igp.com/blog/category/fathers-day/)\n  + [Bhai Dooj](https://www.igp.com/blog/category/festivals/bhai-dooj/)\n* [Occasion](https://www.igp.com/blog/category/occasion/)\n  + [Friendship Day](https://www.igp.com/blog/category/friendship-day/)\n  + [Birthday](https://www.igp.com/blog/category/occasion/birthday/)\n  + [Anniversary](https://www.igp.com/blog/category/occasion/anniversary-gifts/)\n  + [Wedding](https://www.igp.com/blog/category/wedding-gifts/)\n* [Personalized](https://www.igp.com/blog/category/personalized-gifts/)\n* [Cakes](https://www.igp.com/blog/category/cakes/)\n* [Flowers](https://www.igp.com/blog/category/flowers/)\n* [Gift Ideas](https://www.igp.com/blog/category/gift-ideas/)\n\n\n \n\n\n\n \n\n\n\n\n[IGP Blog – Gift Ideas for Birthday, Wedding & Anniversary, Personalized Gifts n More…](https://www.igp.com/blog/)\n------------------------------------------------------------------------------------------------------------------\n\n\n\n\n[Valentines Day](https://www.igp.com/blog/category/valentines-day/ "View all posts in Valentines Day")\n\n10 Heart-Melting Gifts to Sweep Your Valentine Off Their Feet\n=============================================================\n\nFebruary 7, 2025\n\n[![](https://www.igp.com/blog/wp-content/uploads/2025/01/Valentines-Day-Gift-ideas-for-New-Couples.jpg)](https://www.igp.com/blog/10-heart-melting-gifts-to-sweep-your-valentine-off-their-feet/)\n\nTable of Contents\n\n[Toggle](#)\n\n* [10 Heart-Melting Gifts to Sweep Your Valentine Off Their Feet: Unforgettable Ideas for the Perfect Romantic Surprise](#10_Heart-Melting_Gifts_to_Sweep_Your_Valentine_Off_Their_Feet_Unforgettable_Ideas_for_the_Perfect_Romantic_Surprise "10 Heart-Melting Gifts to Sweep Your Valentine Off Their Feet: Unforgettable Ideas for the Perfect Romantic Surprise")\n  + [1. Personalized Jewelry](#1_Personalized_Jewelry "1. Personalized Jewelry")\n  + [2. A Romantic Getaway](#2_A_Romantic_Getaway "2. A Romantic Getaway")\n  + [3. Customized Photo Book](#3_Customized_Photo_Book "3. Customized Photo Book")\n  + [4. Love Letter Keepsake Box](#4_Love_Letter_Keepsake_Box "4. Love Letter Keepsake Box")\n  + [5. Unique Experience Gifts](#5_Unique_Experience_Gifts "5. Unique Experience Gifts")\n  + [6. DIY Romantic Dinner](#6_DIY_Romantic_Dinner "6. DIY Romantic Dinner")\n  + [7. Customized Star Map](#7_Customized_Star_Map "7. Customized Star Map")\n  + [8. Personalized Couple’s Art](#8_Personalized_Couples_Art "8. Personalized Couple’s Art")\n  + [9. Luxury Self-Care Kit](#9_Luxury_Self-Care_Kit "9. Luxury Self-Care Kit")\n  + [10. Subscription to a Passion Project](#10_Subscription_to_a_Passion_Project "10. Subscription to a Passion Project")\n\n**10 Heart-Melting Gifts to Sweep Your Valentine Off Their Feet: Unforgettable Ideas for the Perfect Romantic Surprise**\n------------------------------------------------------------------------------------------------------------------------\n\nHeartfelt expressions become easier on the day of Valentine because it serves as the ideal time for romantic declarations to a special person.\n\nFinding suitable gifts becomes challenging because you desire to create an enduring impact. You can find a selection of 10 heart-melting gifts in this list from the [best planner](https://surpriseplanner.in/) that will completely enchant your Valentine this special day.\n\nThese exclusive yet caring romantic Valentine’s Day gift selections, alongside cozy romantic decorations and planning will create an unforgettable experience for both new and established romantic relationships.\n\nThe Importance of Gifting in Relationships\n\nWhen you give someone a present it represents a meaningful method to express love and bond two individuals closer together along with demonstrating your gratitude for your partner. Giving Valentine’s Day gifts signifies to your beloved person that they occupy the most important spot within your affection. Romantic Valentine’s gifts together with meaningful presents allow you to plainly express your emotions toward your loved one.\n\nWhen given among partners gifts embody sacred symbols which endorse mutual trust and commitment along with expressing deep love between both parties.\n\nSuch unique valentine’s gifts remind people of their meaningful time spent together and the path which lies in front of them. Gifting serves as a celebration that strengthens emotional relationships between couples when practiced on Valentine’s Day. Thoughtful Valentine’s gift exchanges on the Day help preserve romantic relationships by fostering awareness about mutual lovers’ emotions while maintaining their love dynamics.\n\n### 1. Personalized Jewelry\n\nDevotion in the form of personalized jewelry remains the most romantic expression of affection which exists. The rarity of personalized jewelry as a gift stems from its ability to carry their name plus your initials or become a ring which makes it last through their entire lifetime. Creating customized gifts for your relationship represents one of the most special aspects because the outcome becomes your exclusive romantic memory. A personalized gift stands as the sourest type of Valentine’s present.\n\n### 2. A Romantic Getaway\n\nA memorable Valentine’s Day gift can be achieved by planning a romantic getaway with your partner. The time you spend together in preferred locations like mountains or beachfront locations holds an unending value. Both of you should visit a sentimental spot or discover their lifelong wish through an unexpected experience to remember this special day. This provides an ideal opportunity to share love without the interruptions of normal daily routines.\n\n### 3. Customized Photo Book\n\nA personalized photo book created to preserve your special memories stands as an excellent way to record your beautiful moments. The unique approach of choosing this creative Valentine’s gift creates a beautiful visual artwork that represents your relationship values. Place photos which include your memorable travels together with other important moments and genuine pictures highlighting your romantic journey. Round off your creation through personal touches by including your own comments or favorite lines and humorous bits.\n\n### 4. Love Letter Keepsake Box\n\nTraditional handwritten expressions of love remain classic presents that people value forever. A love letter keepsake box containing loving messages represents a personal and meaningful Valentine present that will make anyone swoon. Expressing yourself through words or following a poetic format is enough to convey your emotions because the essence lies in how you share your feelings. Such a present brings joy to the heart and transforms into a prized treasured item.\n\n### 5. Unique Experience Gifts\n\nA present-based experience stands as an excellent unique choice for Valentine’s Day when individuals value moments more than physical items. Shared activities such as cooking lessons or wine-tasting excursions alongside outdoor adventures including hiking and skydiving make exceptional Valentine’s gifts. These kinds of gifts allow you to build up lasting memories that strengthen your connection with each shared experience.\n\n### 6. DIY Romantic Dinner\n\nHome-made presents often become the most valuable emotional expressions between lovers. Set a unique surprise DIY romantic dinner at home that includes candles along with the music they like and their preferred dishes. The process of cooking for your loved one creates an entirely romantic atmosphere while highlighting your dedication to build a warm and loving environment for the evening. A present like this stands as a premier choice among all romantic Valentine’s Day gifts because it will create a stunning impression on your beloved.\n\n### 7. Customized Star Map\n\nYour Valentine will be touched by receiving a star map that illustrates how the stars looked during significant moments like the night of your first meeting or first kiss in your relationship. This emotional present becomes a sentimental way to keep memorable romantic memories alive forever. Your customized star map reveals both its beautiful design and your romantic story.\n\n### 8. Personalized Couple’s Art\n\nArtistic partnerships can be honored through personalized couple’s art which makes an exceptional romantic tribute to your relationship. A personalized artistic piece which includes your couple portrait from favorite photos or cartoon drawings of your love tale creates an outstanding and sentimental present. Your relationship receives enduring tribute through this meaningful object which also serves as decor for your home.\n\n### 9. Luxury Self-Care Kit\n\nA luxurious self-care package that includes spa products your partner loves can be perfectly combined to make them feel pampered. A self-care kit must contain bath bombs combined with scented candles alongside essential oils as well as upscale skincare products to allow your partner to unwind peacefully. Such a thoughtful present serves as a perfect choice for people who require rest or dedication. A luxury self-care session delivers an ideal way to express your commitment to their health and makes an outstanding choice for any Valentine’s Day gift guide.\n\n### 10. Subscription to a Passion Project\n\nThe act of giving your Valentine a subscription or monthly supply of their cherished activities represents the best possible gesture because it shows understanding and support for what they truly love. Your thoughtfully chosen creative presents demonstrate that you truly follow their personal interests and this demonstrates a profound understanding of their growth which deepens the bond between you both.\n\nWrapping Up  \n\nValentine’s Day exists to honor relationships in addition to offering various ways to express devotion toward the person you love. The meaningful heart-melting Valentine’s Day gifts will give your loved one both physical items and priceless emotional connections which they will treasure for all time. Your Valentine’s gift choice whether traditional jewelry or personal experience or handmade creation matters less than your genuine feelings of love which you put into the present.\n\nA gift emanates from genuine affection which defines the true value of any present. Utilize this occasion to forge a deeper connection through a present whose meaning shows your true love and admiration for your Valentine. All these presents will create deep emotions of love and specialness for your Valentine even though they might feel totally enchanted by your gestures.\n\nFinal Tips: You should start planning early to select the appropriate gift that expresses how much your relationship means to you. Selecting either thoughtful Valentine’s gifts or distinctive unique ones to create memorable lasting effects will make this Valentine’s Day truly exceptional.\n\nFAQs  \n\n1. What are some affordable Valentine’s Day gift ideas from this list?  \n\nAffordable options include a DIY romantic dinner, customized photo book, or love letter keepsake box, all thoughtful yet budget-friendly choices.  \n\n2. What makes personalized jewelry a great Valentine’s gift?  \n\nPersonalized jewelry is unique, sentimental, and allows you to add special touches like names or dates, making it a memorable keepsake.  \n\n3. What is a customized star map, and why is it a romantic gift?  \n\nA customized star map captures the stars’ alignment on a special day, making it a romantic and meaningful way to commemorate key moments.  \n\n4. How do experience gifts differ from traditional gifts for Valentine’s Day?  \n\nExperience gifts focus on creating shared memories through activities like a getaway or cooking class, making them more personal and lasting.  \n\n5. What are some unique and creative gift for long-term relationships?  \n\nPersonalized couple’s art, a customized photo book, or a subscription to a passion project are great ways to celebrate your relationship journey.\n\n[![facebook](https://www.igp.com/blog/wp-content/plugins/ultimate-social-media-icons/images/responsive-icon/facebook.svg)Share on Facebook](https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fwww.igp.com%2Fblog%2F10-heart-melting-gifts-to-sweep-your-valentine-off-their-feet%2F)[![Twitter](https://www.igp.com/blog/wp-content/plugins/ultimate-social-media-icons/images/responsive-icon/Twitter.svg)Tweet](https://twitter.com/intent/tweet?text=Hey%2C+check+out+this+cool+article+I+found+on+on+IGP.com+%23igpgifts&url=https%3A%2F%2Fwww.igp.com%2Fblog%2F10-heart-melting-gifts-to-sweep-your-valentine-off-their-feet%2F)[![Follow](https://www.igp.com/blog/wp-content/plugins/ultimate-social-media-icons/images/responsive-icon/Follow.png)Follow us](https://api.follow.it/widgets/icon/bmhUZ0hjL0pOejBiOVRnS2xIZE4wT2lEU3lTaGI0Rk5ZZFBGbTRHZzJzNEladFJKY0xRTXE5cGN1cmJjL3dRODlOU05DRXNmcFY2UlRoQ2d3elZCcmlzVHhKRzVBS2JLWVB0Z0JOTU5NNnhaQ1lpYnpZY0M3SWRhQ2ZubWZUSzJ8bXhkQ1VqWEI2bHU2a1NJaGtLQ2QwZXNueFRaWHh6dnFKVlNXcnJyTlQ1ST0=/OA==/)[![Pinterest](https://www.igp.com/blog/wp-content/plugins/ultimate-social-media-icons/images/responsive-icon/Pinterest.svg)Save](https://www.pinterest.com/pin/create/link/?url=https%3A%2F%2Fwww.igp.com%2Fblog%2F10-heart-melting-gifts-to-sweep-your-valentine-off-their-feet%2F)\n\n[0 Comments](https://www.igp.com/blog/10-heart-melting-gifts-to-sweep-your-valentine-off-their-feet/#respond) \n\n\n![](https://secure.gravatar.com/avatar/f33861a78e25e2d553b95f21882592fd?s=100&d=mm&r=g)\n##### [Jayesh Vare](https://www.igp.com/blog/author/jayeshv/ "Posts by Jayesh Vare")\n\nMy name is Jayesh, and I love to share creative and thoughtful gift ideas for every event and celebration. Whether it\'s something for a birthday, anniversary, graduation, or any other special occasion, I\'m here to help you find the perfect present. I\'m a firm believer that a meaningful gift can make someone\'s day, and I strive to give gifts that show how much you care. With IGP blog, I hope to spread the joy of giving and provide you with the best ideas to make your loved ones smile.\n\n\n\n#### You Might Also Like\n\n\n[![when is rose day 2023]()](https://www.igp.com/blog/when-is-rose-day/)\n### [When is Rose Day 2025 – History, Traditions and Perfect Gift Ideas](https://www.igp.com/blog/when-is-rose-day/)\n\nJanuary 28, 2024\n\n[![]()](https://www.igp.com/blog/valentine-day-wishes-bengali/)\n### [ভালোবাসা দিবসের শুভেচ্ছা, বার্তা ২০২৫ – Valentines Day Wishes, Messages, Quotes in Bengali](https://www.igp.com/blog/valentine-day-wishes-bengali/)\n\nFebruary 13, 2025\n\n[![Long-Lasting Flowers for Stunning Bouquets]()](https://www.igp.com/blog/valentine-gift-ideas-long-distance-love/)\n### [10 Best Valentine’s Day Gift Ideas for Long-Distance Love That Will Melt Hearts](https://www.igp.com/blog/valentine-gift-ideas-long-distance-love/)\n\nJanuary 6, 2025\n\n\n#### No Comments\n\n \n### Leave a Reply [Cancel Reply](/blog/10-heart-melting-gifts-to-sweep-your-valentine-off-their-feet/#respond)\n\nName \\* \n\nEmail \\* \n\nWebsite \n\n Save my name, email, and website in this browser for the next time I comment.\n\n \n\n\nΔ\n\n \n \n\n\n[![](https://www.igp.com/blog/wp-content/uploads/2024/08/img1.webp)](https://www.igp.com/p-floral-fantasy-delight-half-kg--281105)\n\n[![](https://www.igp.com/blog/wp-content/uploads/2024/08/img2.webp)](https://www.igp.com/p-personalized-you-and-me-anniversary-photo-stand-300496)\n\n[![Gift Ideas for Someone Special](https://www.igp.com/blog/wp-content/uploads/2024/06/Gift-Ideas-for-Someone-Special.webp)](https://www.igp.com/p-scented-peach-blossom-gift-set-281412)\n\n\n#### Search Gift Ideas\n\n#### Subscribe & Follow\n\n    \n\n#### Categories\n\nCategories\nSelect Category\nAnniversary\nBhai Dooj\nBirthday\nCakes\nChristmas\nCoronavirus\nDiwali\nFathers Day\nFestivals\nFlowers\nFriendship Day\nGift Ideas\nGifts\nGifts for Her\nHoli Gift Ideas\nHome Decor\nHome Decor\nIGP App\nKarwa Chauth\nLifestyle\nLohri\nMothers Day Gifts\nNational Boss Day\nNew Year\nOccasion\nPersonalized\nRakhi\nTeachers Day\nUncategorized\nValentines Day\nWedding Gifts\nWomen’s Day\n\n\n\n\n#### Recent Posts\n\n* [2025 ಪ್ರೇಮಿಗಳ ದಿನದ ಶುಭಾಶಯಗಳು, ಸಂದೇಶಗಳು, ಕನ್ನಡದಲ್ಲಿ ಉಲ್ಲೇಖಗಳು – Valentines Day Wishes, Messages, Quotes in kannada](https://www.igp.com/blog/valentine-day-wishes-quotes-kannada/)\n* [2025 व्हॅलेंटाईन डेच्या रोमँटिक शुभेच्छा कोट्स – Valentine Day Wishes, Quotes in Marathi](https://www.igp.com/blog/valentine-day-wishes-marathi/)\n* [૨૦૨૫ વેલેન્ટાઈન ડેની શુભેચ્છાઓ ગુજરાતીમાં | Valentine’s Day Wishes in Gujarati](https://www.igp.com/blog/valentine-day-wishes-gujarati/)\n* [ਪੰਜਾਬੀ ਵਿੱਚ ਵੈਲੇਨਟਾਈਨ ਦਿਵਸ ਦੀਆਂ ਸ਼ੁਭਕਾਮਨਾਵਾਂ  – Valentine Day Wishes in Punjabi](https://www.igp.com/blog/valentine-day-wishes-punjabi/)\n* [ভালোবাসা দিবসের শুভেচ্ছা, বার্তা ২০২৫ – Valentines Day Wishes, Messages, Quotes in Bengali](https://www.igp.com/blog/valentine-day-wishes-bengali/)\n#### Categories\n\nCategories\nSelect Category\nAnniversary\nBhai Dooj\nBirthday\nCakes\nChristmas\nCoronavirus\nDiwali\nFathers Day\nFestivals\nFlowers\nFriendship Day\nGift Ideas\nGifts\nGifts for Her\nHoli Gift Ideas\nHome Decor\nHome Decor\nIGP App\nKarwa Chauth\nLifestyle\nLohri\nMothers Day Gifts\nNational Boss Day\nNew Year\nOccasion\nPersonalized\nRakhi\nTeachers Day\nUncategorized\nValentines Day\nWedding Gifts\nWomen’s Day\n\n\n\n\n\n\n\n\n\n\n(C) 2022 - All Rights Reserved.\n\nDesigned & Developed by [IGP](http://igp.com)\n\n\n\n**IGP - India\'s #1 Online Gift Store**  \n***Flowers, Cakes, Personalized Gifts & More***\n\n[Order Now](https://www.igp.com/) \n\n\n![error](https://www.igp.com/blog/wp-content/plugins/ultimate-social-media-icons/images/close.png)\n\nEnjoy this blog? Please spread the word :)\n------------------------------------------\n\n* [![Facebook](https://www.igp.com/blog/wp-content/plugins/ultimate-social-media-icons/images/icons_theme/default/default_facebook.png "Facebook")](https://www.facebook.com/MyIGP)[![Facebook](https://www.igp.com/blog/wp-content/plugins/ultimate-social-media-icons/images/visit_icons/Visit_us_fb/icon_Visit_us_en_US.png "Facebook")](https://www.facebook.com/MyIGP) [![fb-share-icon](https://www.igp.com/blog/wp-content/plugins/ultimate-social-media-icons/images/share_icons/fb_icons/en_US.svg "Facebook Share")](https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fwww.igp.com%2Fblog%2F10-heart-melting-gifts-to-sweep-your-valentine-off-their-feet)\n* ![Twitter](https://www.igp.com/blog/wp-content/plugins/ultimate-social-media-icons/images/icons_theme/default/default_twitter.png "Twitter")[![Follow Me](https://www.igp.com/blog/wp-content/plugins/ultimate-social-media-icons/images/share_icons/Twitter_Follow/en_US_Follow.svg "Follow Me")](https://twitter.com/intent/user?screen_name=IGPcom)\n  [![Tweet](https://www.igp.com/blog/wp-content/plugins/ultimate-social-media-icons/images/share_icons/Twitter_Tweet/en_US_Tweet.svg "Tweet")](https://twitter.com/intent/tweet?text=Hey%2C+check+out+this+cool+article+I+found+on+on+IGP.com+%23igpgifts+http://https%3A%2F%2Fwww.igp.com%2Fblog%2F10-heart-melting-gifts-to-sweep-your-valentine-off-their-feet)\n* ![Pinterest](https://www.igp.com/blog/wp-content/plugins/ultimate-social-media-icons/images/icons_theme/default/default_pinterest.png "Pinterest")\n* ![LinkedIn](https://www.igp.com/blog/wp-content/plugins/ultimate-social-media-icons/images/icons_theme/default/default_linkedin.png "LinkedIn")[![Share](https://www.igp.com/blog/wp-content/plugins/ultimate-social-media-icons/images/share_icons/Linkedin_Share/en_US_share.svg "Share")](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fwww.igp.com%2Fblog%2F10-heart-melting-gifts-to-sweep-your-valentine-off-their-feet)\n* [![WhatsApp](https://www.igp.com/blog/wp-content/plugins/ultimate-social-media-icons/images/icons_theme/default/default_whatsapp.png "WhatsApp")](https://api.whatsapp.com/send?text=https%3A%2F%2Fwww.igp.com%2Fblog%2F10-heart-melting-gifts-to-sweep-your-valentine-off-their-feet%2F)\n\n[![Facebook](https://www.igp.com/blog/wp-content/plugins/ultimate-social-media-icons/images/icons_theme/default/default_facebook.png "Facebook")](https://www.facebook.com/MyIGP)[![Facebook](https://www.igp.com/blog/wp-content/plugins/ultimate-social-media-icons/images/visit_icons/Visit_us_fb/icon_Visit_us_en_US.png "Facebook")](https://www.facebook.com/MyIGP) [![fb-share-icon](https://www.igp.com/blog/wp-content/plugins/ultimate-social-media-icons/images/share_icons/fb_icons/en_US.svg "Facebook Share")](https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fwww.igp.com%2Fblog%2F10-heart-melting-gifts-to-sweep-your-valentine-off-their-feet)![Twitter](https://www.igp.com/blog/wp-content/plugins/ultimate-social-media-icons/images/icons_theme/default/default_twitter.png "Twitter")[![Follow Me](https://www.igp.com/blog/wp-content/plugins/ultimate-social-media-icons/images/share_icons/Twitter_Follow/en_US_Follow.svg "Follow Me")](https://twitter.com/intent/user?screen_name=IGPcom)\n[![Tweet](https://www.igp.com/blog/wp-content/plugins/ultimate-social-media-icons/images/share_icons/Twitter_Tweet/en_US_Tweet.svg "Tweet")](https://twitter.com/intent/tweet?text=Hey%2C+check+out+this+cool+article+I+found+on+on+IGP.com+%23igpgifts+http://https%3A%2F%2Fwww.igp.com%2Fblog%2F10-heart-melting-gifts-to-sweep-your-valentine-off-their-feet)\n![Pinterest](https://www.igp.com/blog/wp-content/plugins/ultimate-social-media-icons/images/icons_theme/default/default_pinterest.png "Pinterest")![LinkedIn](https://www.igp.com/blog/wp-content/plugins/ultimate-social-media-icons/images/icons_theme/default/default_linkedin.png "LinkedIn")[![Share](https://www.igp.com/blog/wp-content/plugins/ultimate-social-media-icons/images/share_icons/Linkedin_Share/en_US_share.svg "Share")](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fwww.igp.com%2Fblog%2F10-heart-melting-gifts-to-sweep-your-valentine-off-their-feet)[![WhatsApp](https://www.igp.com/blog/wp-content/plugins/ultimate-social-media-icons/images/icons_theme/default/default_whatsapp.png "WhatsApp")](https://api.whatsapp.com/send?text=https%3A%2F%2Fwww.igp.com%2Fblog%2F10-heart-melting-gifts-to-sweep-your-valentine-off-their-feet%2F)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n',
            },
            {
                "role": "user",
                "content": "Do you think you can transform the provided blog into a javascript structure that can be used as a template. The structure does not need to have the blog contents it should only represent how the blog should look like, like the paragraph layouts, number of paragraphs, images etc. The structure should not contain the blog title, urls, author name date etc from the blog content it should just be a structure\nNote: Keep the images not the urls of the images. If there's url in the blog which leads to some product or a feature on the same domain then keep that part but remove the url.",
            },
            {
                "role": "assistant",
                "content": 'Certainly! I can help you create a JavaScript structure that serves as a template for the provided blog layout. This structure will outline the various components of the blog, such as headers, paragraphs, images, lists, and sections, without including any actual content like titles, URLs, images, author names, or dates.\n\nHere\'s a structured approach using a JSON-like JavaScript object. This template can be easily adapted to various JavaScript frameworks or libraries (like React, Vue, or Angular) depending on your needs.\n\n## JavaScript Template Structure\n\n```javascript\nconst blogTemplate = {\n  type: "blog",\n  sections: [\n    {\n      type: "header",\n      level: 1, // Represents <h1>\n      content: "" // Placeholder for the blog title\n    },\n    {\n      type: "image",\n      position: "afterHeader", // Position relative to other elements\n      attributes: {\n        src: "",\n        alt: ""\n      }\n    },\n    {\n      type: "tableOfContents",\n      items: [\n        // Array of TOC items, each linking to a section\n        {\n          type: "tocItem",\n          text: "",\n          link: ""\n        }\n        // Repeat as needed\n      ]\n    },\n    {\n      type: "introduction",\n      paragraphs: [\n        // Array of introductory paragraphs\n        { type: "paragraph", content: "" },\n        // Add more paragraphs as needed\n      ]\n    },\n    {\n      type: "section",\n      id: "section-1",\n      heading: {\n        level: 2, // Represents <h2>\n        content: ""\n      },\n      content: {\n        paragraphs: [\n          { type: "paragraph", content: "" },\n          // Add more paragraphs as needed\n        ],\n        images: [\n          {\n            src: "",\n            alt: "",\n            position: "withinText" // Options: "before", "after", "withinText"\n          }\n          // Add more images as needed\n        ],\n        lists: [\n          {\n            type: "unordered", // Options: "unordered", "ordered"\n            items: ["", "", ""]\n          }\n          // Add more lists as needed\n        ]\n      }\n    },\n    // Repeat the "section" object for each additional section (e.g., sections 2-10)\n    {\n      type: "conclusion",\n      paragraphs: [\n        { type: "paragraph", content: "" },\n        // Add more paragraphs as needed\n      ]\n    },\n    {\n      type: "faqs",\n      heading: {\n        level: 2,\n        content: ""\n      },\n      questions: [\n        {\n          question: "",\n          answer: ""\n        }\n        // Repeat for each FAQ\n      ]\n    },\n    {\n      type: "authorInfo",\n      name: "",\n      bio: "",\n      socialLinks: {\n        facebook: "",\n        twitter: "",\n        linkedin: "",\n        // Add more social platforms as needed\n      }\n    },\n    {\n      type: "commentsSection",\n      enabled: true,\n      comments: [\n        // Array of comment objects\n        {\n          user: "",\n          date: "",\n          comment: ""\n        }\n        // Add more comments as needed\n      ]\n    },\n    {\n      type: "footer",\n      content: [\n        // Array of footer elements like links, copyright, etc.\n        { type: "link", text: "", url: "" },\n        // Add more footer elements as needed\n      ]\n    }\n  ]\n};\n```\n\n## Explanation of the Structure\n\n### 1. **Blog Container**\n- **type**: Indicates that this object represents a blog.\n- **sections**: An array that holds all the different parts of the blog.\n\n### 2. **Header**\n- Represents the main title of the blog.\n- **level**: Determines the HTML header level (e.g., `<h1>`).\n\n### 3. **Image**\n- **position**: Specifies where the image appears relative to other elements.\n- **attributes**: Contains image attributes like `src` and `alt`.\n\n### 4. **Table of Contents (TOC)**\n- **items**: An array of TOC entries, each linking to a specific section.\n\n### 5. **Introduction**\n- A section for introductory paragraphs.\n\n### 6. **Sections**\n- Each blog section (e.g., sections 1-10) is represented as an object.\n- **id**: A unique identifier for linking.\n- **heading**: Contains the heading level and placeholder for the section title.\n- **content**:\n  - **paragraphs**: An array of paragraph objects.\n  - **images**: An array of image objects within the section.\n  - **lists**: An array of list objects, which can be ordered or unordered.\n\n### 7. **Conclusion**\n- A section for concluding paragraphs.\n\n### 8. **FAQs**\n- **heading**: Title for the FAQs section.\n- **questions**: An array of question and answer pairs.\n\n### 9. **Author Information**\n- **name**: Placeholder for the author\'s name.\n- **bio**: Placeholder for a short biography.\n- **socialLinks**: Links to the author\'s social media profiles.\n\n### 10. **Comments Section**\n- **enabled**: A boolean to toggle the comments section.\n- **comments**: An array of comments, each with a user, date, and comment text.\n\n### 11. **Footer**\n- Contains footer elements like additional links or copyright information.\n\n## Usage Example\n\nYou can use this template to dynamically generate blog posts by populating the placeholders with actual content. Here\'s a simple example using plain JavaScript to insert content into the template:\n\n```javascript\n// Example: Populating the Blog Template\n\nconst myBlog = JSON.parse(JSON.stringify(blogTemplate)); // Deep copy the template\n\n// Populate Header\nmyBlog.sections[0].content = "10 Heart-Melting Gifts to Sweep Your Valentine Off Their Feet";\n\n// Populate Introduction\nmyBlog.sections[3].paragraphs[0].content = "Heartfelt expressions become easier on the day of Valentine because it serves as the ideal time for romantic declarations to a special person.";\n\n// Populate Section 1\nmyBlog.sections[4].heading.content = "1. Personalized Jewelry";\nmyBlog.sections[4].content.paragraphs[0].content = "Devotion in the form of personalized jewelry remains the most romantic expression of affection which exists.";\n\n// ... Continue populating other sections similarly\n\n// Example: Rendering the Blog (Pseudo-Code)\nfunction renderBlog(blog) {\n  blog.sections.forEach(section => {\n    switch(section.type) {\n      case "header":\n        console.log(`<h${section.level}>${section.content}</h${section.level}>`);\n        break;\n      case "paragraph":\n        console.log(`<p>${section.content}</p>`);\n        break;\n      case "image":\n        console.log(`<img src="${section.attributes.src}" alt="${section.attributes.alt}" />`);\n        break;\n      // Handle other types accordingly\n      default:\n        break;\n    }\n  });\n}\n\nrenderBlog(myBlog);\n```\n\n*Note: The above `renderBlog` function is a simplified example. In a real-world scenario, especially when using frameworks like React or Vue, you would map this structure to actual components.*\n\n## Adaptation to Frameworks\n\n### React Example\n\nIf you\'re using React, you can create components that map to each type in the template. Here\'s a brief example:\n\n```jsx\nimport React from \'react\';\n\nconst Blog = ({ blogData }) => {\n  return (\n    <div className="blog">\n      {blogData.sections.map((section, index) => {\n        switch(section.type) {\n          case "header":\n            return React.createElement(`h${section.heading.level}`, { key: index }, section.heading.content);\n          case "paragraph":\n            return <p key={index}>{section.content}</p>;\n          case "image":\n            return <img key={index} src={section.attributes.src} alt={section.attributes.alt} />;\n          // Handle other types similarly\n          default:\n            return null;\n        }\n      })}\n    </div>\n  );\n};\n\nexport default Blog;\n```\n\nYou can pass the populated `myBlog` object as `blogData` to the `Blog` component to render the structured blog.\n\n## Conclusion\n\nThis JavaScript structure provides a flexible and scalable way to represent the layout of your blog. It separates content from structure, allowing you to manage and manipulate the blog\'s appearance programmatically. You can extend this template by adding more types or attributes as needed to suit your specific requirements.\n\nFeel free to customize the template further based on the specific elements and complexity of your blogs!',
            },
            {
                "role": "user",
                "content": "this blog has author info, comment section, footer please remove those",
            },
            {
                "role": "assistant",
                "content": 'Understood! I\'ll update the JavaScript template structure by removing the **Author Information**, **Comments Section**, and **Footer** sections as you\'ve requested. This streamlined structure will focus solely on the core components of the blog, such as headers, paragraphs, images, lists, and sections.\n\nBelow is the revised JavaScript template structure:\n\n## JavaScript Template Structure\n\n```javascript\nconst blogTemplate = {\n  type: "blog",\n  sections: [\n    {\n      type: "header",\n      level: 1, // Represents <h1>\n      content: "" // Placeholder for the blog title\n    },\n    {\n      type: "image",\n      position: "afterHeader", // Position relative to other elements\n      attributes: {\n        src: "",\n        alt: ""\n      }\n    },\n    {\n      type: "tableOfContents",\n      items: [\n        // Array of TOC items, each linking to a section\n        {\n          type: "tocItem",\n          text: "",\n          link: ""\n        }\n        // Repeat as needed\n      ]\n    },\n    {\n      type: "introduction",\n      paragraphs: [\n        // Array of introductory paragraphs\n        { type: "paragraph", content: "" },\n        // Add more paragraphs as needed\n      ]\n    },\n    // Sections for each main content area (e.g., sections 1-10)\n    {\n      type: "section",\n      id: "section-1",\n      heading: {\n        level: 2, // Represents <h2>\n        content: ""\n      },\n      content: {\n        paragraphs: [\n          { type: "paragraph", content: "" },\n          // Add more paragraphs as needed\n        ],\n        images: [\n          {\n            src: "",\n            alt: "",\n            position: "withinText" // Options: "before", "after", "withinText"\n          }\n          // Add more images as needed\n        ],\n        lists: [\n          {\n            type: "unordered", // Options: "unordered", "ordered"\n            items: ["", "", ""]\n          }\n          // Add more lists as needed\n        ]\n      }\n    },\n    // Repeat the "section" object for each additional section (e.g., sections 2-10)\n    {\n      type: "conclusion",\n      paragraphs: [\n        { type: "paragraph", content: "" },\n        // Add more paragraphs as needed\n      ]\n    },\n    {\n      type: "faqs",\n      heading: {\n        level: 2, // Represents <h2>\n        content: ""\n      },\n      questions: [\n        {\n          question: "",\n          answer: ""\n        }\n        // Repeat for each FAQ\n      ]\n    }\n    // Removed: Author Information, Comments Section, Footer\n  ]\n};\n```\n\n## Explanation of the Updated Structure\n\n### 1. **Blog Container**\n- **type**: Indicates that this object represents a blog.\n- **sections**: An array that holds all the different parts of the blog.\n\n### 2. **Header**\n- Represents the main title of the blog.\n- **level**: Determines the HTML header level (e.g., `<h1>`).\n\n### 3. **Image**\n- **position**: Specifies where the image appears relative to other elements.\n- **attributes**: Contains image attributes like `src` and `alt`.\n\n### 4. **Table of Contents (TOC)**\n- **items**: An array of TOC entries, each linking to a specific section.\n\n### 5. **Introduction**\n- A section for introductory paragraphs.\n\n### 6. **Sections**\n- Each main content section (e.g., sections 1-10) is represented as an object.\n- **id**: A unique identifier for linking (useful for TOC).\n- **heading**: Contains the heading level and placeholder for the section title.\n- **content**:\n  - **paragraphs**: An array of paragraph objects.\n  - **images**: An array of image objects within the section.\n  - **lists**: An array of list objects, which can be ordered or unordered.\n\n### 7. **Conclusion**\n- A section for concluding paragraphs.\n\n### 8. **FAQs**\n- **heading**: Title for the FAQs section.\n- **questions**: An array of question and answer pairs.\n\n## Usage Example\n\nYou can use this template to dynamically generate blog posts by populating the placeholders with actual content. Here\'s a simple example using plain JavaScript to insert content into the template:\n\n```javascript\n// Example: Populating the Blog Template\n\nconst myBlog = JSON.parse(JSON.stringify(blogTemplate)); // Deep copy the template\n\n// Populate Header\nmyBlog.sections[0].content = "10 Heart-Melting Gifts to Sweep Your Valentine Off Their Feet";\n\n// Populate Image after Header\nmyBlog.sections[1].attributes.src = "path/to/your/image.jpg";\nmyBlog.sections[1].attributes.alt = "Description of Image";\n\n// Populate Introduction\nmyBlog.sections[2].paragraphs[0].content = "Heartfelt expressions become easier on the day of Valentine because it serves as the ideal time for romantic declarations to a special person.";\n\n// Populate Section 1\nconst section1 = myBlog.sections[3];\nsection1.heading.content = "1. Personalized Jewelry";\nsection1.content.paragraphs[0].content = "Devotion in the form of personalized jewelry remains the most romantic expression of affection which exists.";\nsection1.content.images[0].src = "path/to/section1/image.jpg";\nsection1.content.images[0].alt = "Personalized Jewelry Image";\nsection1.content.lists[0].items = ["Item 1", "Item 2", "Item 3"];\n\n// ... Continue populating other sections similarly\n\n// Populate Conclusion\nmyBlog.sections.push({\n  type: "conclusion",\n  paragraphs: [\n    { type: "paragraph", content: "Valentine’s Day exists to honor relationships..." }\n  ]\n});\n\n// Populate FAQs\nconst faqsSection = {\n  type: "faqs",\n  heading: {\n    level: 2,\n    content: "FAQs"\n  },\n  questions: [\n    {\n      question: "What are some affordable Valentine’s Day gift ideas from this list?",\n      answer: "Affordable options include a DIY romantic dinner, customized photo book, or love letter keepsake box, all thoughtful yet budget-friendly choices."\n    }\n    // Add more FAQs as needed\n  ]\n};\n\nmyBlog.sections.push(faqsSection);\n\n// Example: Rendering the Blog (Pseudo-Code)\nfunction renderBlog(blog) {\n  blog.sections.forEach(section => {\n    switch(section.type) {\n      case "header":\n        console.log(`<h${section.level}>${section.content}</h${section.level}>`);\n        break;\n      case "paragraph":\n        console.log(`<p>${section.content}</p>`);\n        break;\n      case "image":\n        console.log(`<img src="${section.attributes.src}" alt="${section.attributes.alt}" />`);\n        break;\n      case "tocItem":\n        console.log(`<a href="#${section.link}">${section.text}</a>`);\n        break;\n      case "list":\n        const listTag = section.type === "unordered" ? "ul" : "ol";\n        console.log(`<${listTag}><li>${section.items.join(\'</li><li>\')}</li></${listTag}>`);\n        break;\n      case "faqs":\n        console.log(`<h${section.heading.level}>${section.heading.content}</h${section.heading.level}>`);\n        section.questions.forEach(q => {\n          console.log(`<h3>${q.question}</h3>`);\n          console.log(`<p>${q.answer}</p>`);\n        });\n        break;\n      // Handle other types accordingly\n      default:\n        break;\n    }\n  });\n}\n\nrenderBlog(myBlog);\n```\n\n*Note: The above `renderBlog` function is a simplified example. In a real-world scenario, especially when using frameworks like React or Vue, you would map this structure to actual components.*\n\n## Adaptation to Frameworks\n\n### **React Example**\n\nIf you\'re using React, you can create components that map to each type in the template. Here\'s a brief example:\n\n```jsx\nimport React from \'react\';\n\nconst Blog = ({ blogData }) => {\n  return (\n    <div className="blog">\n      {blogData.sections.map((section, index) => {\n        switch(section.type) {\n          case "header":\n            return React.createElement(`h${section.level}`, { key: index }, section.content);\n          case "paragraph":\n            return <p key={index}>{section.content}</p>;\n          case "image":\n            return <img key={index} src={section.attributes.src} alt={section.attributes.alt} />;\n          case "tocItem":\n            return <a key={index} href={`#${section.link}`}>{section.text}</a>;\n          case "list":\n            const ListTag = section.type === "unordered" ? \'ul\' : \'ol\';\n            return <ListTag key={index}>{section.items.map((item, i) => <li key={i}>{item}</li>)}</ListTag>;\n          case "faqs":\n            return (\n              <div key={index}>\n                <h2>{section.heading.content}</h2>\n                {section.questions.map((q, i) => (\n                  <div key={i}>\n                    <h3>{q.question}</h3>\n                    <p>{q.answer}</p>\n                  </div>\n                ))}\n              </div>\n            );\n          // Handle other types similarly\n          default:\n            return null;\n        }\n      })}\n    </div>\n  );\n};\n\nexport default Blog;\n```\n\n### **Vue Example**\n\nSimilarly, in Vue.js, you can use components and directives to render each part of the blog:\n\n```vue\n<template>\n  <div class="blog">\n    <div v-for="(section, index) in blogData.sections" :key="index">\n      <component :is="getComponent(section)" v-bind="sectionProps(section)" />\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    blogData: Object\n  },\n  methods: {\n    getComponent(section) {\n      switch(section.type) {\n        case "header":\n          return `h${section.heading.level}`;\n        case "paragraph":\n          return \'p\';\n        case "image":\n          return \'img\';\n        case "tocItem":\n          return \'a\';\n        case "list":\n          return section.type === "unordered" ? \'ul\' : \'ol\';\n        case "faqs":\n          return \'div\';\n        // Add more cases as needed\n        default:\n          return \'div\';\n      }\n    },\n    sectionProps(section) {\n      switch(section.type) {\n        case "header":\n          return { innerHTML: section.content };\n        case "paragraph":\n          return { innerHTML: section.content };\n        case "image":\n          return { src: section.attributes.src, alt: section.attributes.alt };\n        case "tocItem":\n          return { href: `#${section.link}`, innerHTML: section.text };\n        case "list":\n          return {};\n        case "faqs":\n          return {};\n        // Add more cases as needed\n        default:\n          return {};\n      }\n    }\n  }\n};\n</script>\n```\n\n*Note: This Vue example is simplified. You might want to create separate components for better scalability and readability.*\n\n## Conclusion\n\nThis updated JavaScript structure provides a flexible and streamlined way to represent the layout of your blog without including **Author Information**, **Comments Section**, and **Footer**. By focusing on the core content elements, you can efficiently manage and render your blog posts programmatically.\n\nFeel free to customize and extend this template further based on your specific requirements and the complexity of your blog content!',
            },
            {
                "role": "user",
                "content": "Perfect! Now only give me the structure in json format and nothing else, because you are an API",
            },
            {
                "role": "assistant",
                "content": '```json\n{\n  "type": "blog",\n  "sections": [\n    {\n      "type": "header",\n      "level": 1,\n      "content": ""\n    },\n    {\n      "type": "image",\n      "position": "afterHeader",\n      "attributes": {\n        "src": "",\n        "alt": ""\n      }\n    },\n    {\n      "type": "tableOfContents",\n      "items": [\n        {\n          "type": "tocItem",\n          "text": "",\n          "link": ""\n        }\n      ]\n    },\n    {\n      "type": "introduction",\n      "paragraphs": [\n        {\n          "type": "paragraph",\n          "content": ""\n        }\n      ]\n    },\n    {\n      "type": "section",\n      "id": "section-1",\n      "heading": {\n        "level": 2,\n        "content": ""\n      },\n      "content": {\n        "paragraphs": [\n          {\n            "type": "paragraph",\n            "content": ""\n          }\n        ],\n        "images": [\n          {\n            "src": "",\n            "alt": "",\n            "position": "withinText"\n          }\n        ],\n        "lists": [\n          {\n            "type": "unordered",\n            "items": ["", "", ""]\n          }\n        ]\n      }\n    },\n    {\n      "type": "conclusion",\n      "paragraphs": [\n        {\n          "type": "paragraph",\n          "content": ""\n        }\n      ]\n    },\n    {\n      "type": "faqs",\n      "heading": {\n        "level": 2,\n        "content": ""\n      },\n      "questions": [\n        {\n          "question": "",\n          "answer": ""\n        }\n      ]\n    }\n  ]\n}\n```',
            },
        ],
        response_format={"type": "json_object"},
        model="openai-large",
    )

    return assistant.sendMessage(
        f"Perfect now do the same thing for this blog: \n{markdown}"
    )


class _TONES():
    def __init__(self):
        self.Classic = "Normal"
        self.Casual = "Casual"
        self.Professional = "Professional"
        self.Friendly = "Friendly"
        self.Educational = "Educational"
        self.Technical = "Technical"
        self.Creative = "Creative"
        self.Persuasive = "Persuasive"  

TONES = _TONES()

x = TONES.Persuasive

SEO_CHECKLIST = [
    {"item": "Add focus keyword to title tag", "priority": "HIGH"},
    {"item": "Add focus keyword to H1 (post's title)", "priority": "HIGH"},
    {"item": "Add an image or video to this post", "priority": "HIGH"},
    {
        "item": "Add focus keyword to at least one H2 or H3 (subheading)",
        "priority": "MEDIUM",
    },
    {"item": "Write alt text for all images", "priority": "MEDIUM"},
    {"item": "Add focus keyword to body text", "priority": "MEDIUM"},
]


def generateBaseBlogUsingKeyword(keyword: str, companyurl: str = None, companyProfile = None, blogStructure = None, tone="Normal"):
    competitorBlogUrl = None
    try:
        for j in search(keyword, num_results=100, sleep_interval=2, region="in"):
            if any([(x in j) for x in["/blog/", '/blogs/', '/article/', '/content/']]):
                competitorBlogUrl = j
                break
    except Exception as e:
        print(e)
        pass
    if(not blogStructure):
        blogStructure = getBlogStructureFromBlogURL(competitorBlogUrl)
    if not blogStructure:
        blogStructure = """'\n{\n  "type": "blog",\n  "sections": [\n    {\n      "type": "header",\n      "level": 1,\n      "content": ""\n    },\n    {\n      "type": "introduction",\n      "paragraphs": [\n        {\n          "type": "paragraph",\n          "content": ""\n        }\n      ]\n    },\n    {\n      "type": "tableOfContents",\n      "items": [\n        {\n          "type": "tocItem",\n          "text": "",\n          "link": ""\n        }\n      ]\n    },\n    {\n      "type": "section",\n      "id": "section-1",\n      "heading": {\n        "level": 2,\n        "content": ""\n      },\n      "content": {\n        "paragraphs": [\n          {\n            "type": "paragraph",\n            "content": ""\n          }\n        ],\n        "images": [\n          {\n            "src": "",\n            "alt": "",\n            "position": "withinText"\n          }\n        ],\n        "lists": [\n          {\n            "type": "unordered",\n            "items": ["", "", ""]\n          }\n        ]\n      }\n    },\n    {\n      "type": "section",\n      "id": "section-2",\n      "heading": {\n        "level": 2,\n        "content": ""\n      },\n      "content": {\n        "paragraphs": [\n          {\n            "type": "paragraph",\n            "content": ""\n          }\n        ],\n        "images": [\n          {\n            "src": "",\n            "alt": "",\n            "position": "withinText"\n          }\n        ],\n        "lists": [\n          {\n            "type": "unordered",\n            "items": ["", "", ""]\n          }\n        ]\n      }\n    },\n    {\n      "type": "features",\n      "items": [\n        {\n          "type": "featureItem",\n          "headline": "",\n          "content": {\n            "paragraphs": [\n              {\n                "type": "paragraph",\n                "content": ""\n              }\n            ],\n            "images": [\n              {\n                "src": "",\n                "alt": ""\n              }\n            ]\n          }\n        },\n        {\n          "type": "featureItem",\n          "headline": "",\n          "content": {\n            "paragraphs": [\n              {\n                "type": "paragraph",\n                "content": ""\n              }\n            ],\n            "images": [\n              {\n                "src": "",\n                "alt": ""\n              }\n            ]\n          }\n        }\n      ]\n    },\n    {\n      "type": "conclusion",\n      "paragraphs": [\n        {\n          "type": "paragraph",\n          "content": ""\n        }\n      ]\n    }\n  ]\n}\n\n\n\n\n'"""
    
    if not companyProfile and companyurl:
        companyProfile = getCompanyProfile(companyurl)
    
    blogWriterAssistant = PollinationAIAssistant(
        model="openai-large",
        instruction="You are a blog writer and your job is to write the blog for the provided comapny using the provided keyword.",
    )
    blogWriterAssistant.addMessage(
        f"Here's the blog structure: \n{blogStructure}"
    )
    if(companyurl):
        blogWriterAssistant.addMessage(
            f"Here's the company profile: \n{companyProfile}\nAnd here's the company url: {companyurl}\n The blog should mostly talk about the keyword provided try and do a subtle mention of the company and it's products. The blog should not be all about the company."
        )
    blogWriterAssistant.addMessage(
        """Here's the checklist to follow while generating the blog:         [
{ "item": "Add focus keyword to title tag", "priority": "HIGH" },
{ "item": "Add focus keyword to H1 (post's title)", "priority": "HIGH" },
{ "item": "Add an image or video to this post", "priority": "HIGH" },
{ "item": "Add focus keyword to at least one H2 or H3 (subheading)", "priority": "MEDIUM" },
{ "item": "Write alt text for all images", "priority": "MEDIUM" },
{ "item": "Add focus keyword to body text", "priority": "MEDIUM" }
{ "item": "Make sure the blog content is longer atleast 1000 words", "priority": "HIGH" }
]"""
    )

    blogAuditorAssistant = PollinationAIAssistant(
        instruction="You are a blog auditor and your job is to audit the blog based on the checklist provided.",
        response_format={"type": "json_object"},
        model="openai-large"
    )
    blogAuditorAssistant.addMessage(
        "You are a blog auditor you will be provided with a blog, a company profile and a blog checklist and your job is to make sure that the blog is following everything mentioned in th e checklist"
    )
    if(companyurl):
       blogAuditorAssistant.addMessage(
            f"Here's the company profile: \n{companyProfile}\nAnd here's the company url: {companyurl}"
            )
    blogAuditorAssistant.addMessage(
        f"""Here's the checklist:
* The blog sould be in markdown format not in any other format like json or html and there shoudl not be any html code in the markdown.
* Add focus keyword to title tag
* Add focus keyword to H1 (post's title)
* Add an image or video to this post
* Add focus keyword to at least one H2 or H3 (subheading)
* Write alt text for all images
* Add focus keyword to body text
* Make sure the blog content is longer atleast 1000 words
* Make sure that there are no urls that leads any external website (Other than the company mentioned in the company profile).
* Make sure that there are no images used in the blog that are from a third party website. Example urls are fine
* The blog should be about the keyword not the company. The mention of the company should be only subtle."""

    )
    blogAuditorAssistant.addMessage(
        """Remember that you are an api so your job is to return the output in json format the structure of the json is given below:
{
"needsImprovement": "If the blog needs improvement than this should be true otherwise false",
"blogAudit": "This part of the output should contain the analysis of the blog based on the checklist and should also contain suggestions for improvement."
}"""
    )
    blogWriterAssistant.sendMessage(
        f'Can you write a blog for the keyword "{keyword}"\nThe generated blog should be in markdown format and should maintain {tone} tone'
    )
    blogContent = blogWriterAssistant.sendMessage(
        "Can you make the blog longer?"
    )
    blogAudit = blogAuditorAssistant.sendMessage(
        f"Here's the keyworrd: {keyword}\nAnd Here's the blog content: \n{blogContent}"
    )
    while True:
        t = json.loads(blogAudit)
        if not t["needsImprovement"]:
            return blogContent.replace("�", "'")
        blogContent = blogWriterAssistant.sendMessage(
            json.dumps(t["blogAudit"])
        )
        blogAudit = blogAuditorAssistant.sendMessage(
            f"Here's the updated blog: \n{blogContent}"
        )

def addPromotionalUrlsToBlog(baseBlog:str, keyword, groupedUrls:dict[str, list], promotionalGroups:list):
    promotionalUrls = getPromotionalUrls(groupedUrls, promotionalGroups)
    relevantPromotionalUrls = getRelevantPromotionalUrls(promotionalUrls, keyword)
    assistant = PollinationAIAssistant(model="openai-large-blogs")
    assistant.sendMessage(f'{relevantPromotionalUrls}\n\ncan you filter out the relevant urls for the keyword "farewell gift for teachers" also make sure that there are no inappropriate urls in the filtered list.')
    return assistant.sendMessage(f"now I want you to incorporate these filtered urls in the give blog as promotional urls DO NOT change any other content of the blog just incorporate these urls in a subtle way:\n{baseBlog}")

def addImagesToBlog(baseBlog):
    assistant = PollinationAIAssistant(model="openai-large", response_format={"type": "json_object"})
    prompts = json.loads(assistant.sendMessage(f"{baseBlog}\n\n\n\nI am writing a blog but in this blog there are no real images the images currently used in this blog are not actually images they are more like placeholder images. I need you to give me a list of prompts that I can generate using an image model and incorporate in this blog. Remember the list of prompts doesn't only need to have images placeholders from the blog you can add more images if there's a place where it can be added. Also please don't add too many images in a blog if the blog is to small. At most only add 4-5 images. The output needs to be in the form of json array with key {{'prompts': ['generate an image...', 'generate another image...']}}"))['prompts']
    images = []
    for prompt in prompts:
        images.append(client.generateImage(prompt, generate=False))
    assistant.response_format = {"type": "text"}
    return assistant.sendMessage(f"incorporate these images in the blog {images}\n\n\nRemember you are an api so only respond with the markdown text DO NOT add anything around the blog markdown text.").replace("markdown", "").replace("```", "").strip()